// -------------------------------------------------- //
// This file is autogenerated by pioasm; do not edit! //
// -------------------------------------------------- //

#pragma once

#if !PICO_NO_HARDWARE
#include "hardware/pio.h"
#endif

// -------------- //
// encoder_period //
// -------------- //

#define encoder_period_wrap_target 0
#define encoder_period_wrap 31

#define encoder_period_VERSION 100
#define encoder_period_CYCLES_PER_COUNT 12

static const uint16_t encoder_period_program_instructions[] = {
            //     .wrap_target
    0x0008, //  0: jmp    8                          
    0x060d, //  1: jmp    13                     [6] 
    0x060d, //  2: jmp    13                     [6] 
    0x060d, //  3: jmp    13                     [6] 
    0x000d, //  4: jmp    13                         
    0x0418, //  5: jmp    24                     [4] 
    0x0415, //  6: jmp    21                     [4] 
    0x000e, //  7: jmp    14                         
    0xa0cb, //  8: mov    isr, !null                 
    0x40e2, //  9: in     osr, 2                     
    0xa0e6, // 10: mov    osr, isr                   
    0xa0c3, // 11: mov    isr, null                  
    0x60a3, // 12: out    pc, 3                      
    0x004f, // 13: jmp    x--, 15                    
    0xe020, // 14: set    x, 0                       
    0xa0e6, // 15: mov    osr, isr                   
    0xa0c3, // 16: mov    isr, null                  
    0x4002, // 17: in     pins, 2                    
    0xa0a6, // 18: mov    pc, isr                    
    0xe241, // 19: set    y, 1                   [2] 
    0x001d, // 20: jmp    29                         
    0x0079, // 21: jmp    !y, 25                     
    0xe240, // 22: set    y, 0                   [2] 
    0x001d, // 23: jmp    29                         
    0x0073, // 24: jmp    !y, 19                     
    0xa0c9, // 25: mov    isr, !x                    
    0x4041, // 26: in     y, 1                       
    0x8000, // 27: push   noblock                    
    0xa0c3, // 28: mov    isr, null                  
    0xa0eb, // 29: mov    osr, !null                 
    0x603f, // 30: out    x, 31                      
    0x000d, // 31: jmp    13                         
            //     .wrap
};

#if !PICO_NO_HARDWARE
static const struct pio_program encoder_period_program = {
    .instructions = encoder_period_program_instructions,
    .length = 32,
    .origin = 0,
};

static inline pio_sm_config encoder_period_program_get_default_config(uint offset) {
    pio_sm_config c = pio_get_default_sm_config();
    sm_config_set_wrap(&c, offset + encoder_period_wrap_target, offset + encoder_period_wrap);
    return c;
}

static inline void encoder_period_program_init(PIO pio, uint sm, uint offset, uint base_pin) {
    pio_sm_config c = encoder_period_program_get_default_config(offset);
    sm_config_set_in_pins(&c, base_pin);
    sm_config_set_in_shift(&c, false, false, 32);
    sm_config_set_out_shift(&c, true, false, 32);
    sm_config_set_fifo_join(&c, PIO_FIFO_JOIN_RX);
    pio_sm_init(pio, sm, offset, &c);
    pio_sm_set_enabled(pio, sm, true);
}

#endif

